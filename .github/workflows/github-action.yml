name: github-action

on:
  push:
    branches: [ "main" ]
#    paths:
#      - '**.java'
  pull_request:
    branches: [ "main" ]
#    paths:
#        - '**.java'

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application-properties.yml
        if: contains(github.ref, 'main')
        run: |
          pwd
          mkdir -p src/main/resources/
          touch src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_PROD }}" > ./application.yml
        shell: bash

#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew

#      - name: Build with Gradle
#        run: ./gradlew clean build -x test

#      - name: Docker Hub Login
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

#      - name: Build and push Docker image
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: Dockerfile
#          platforms: linux/amd64
#          push: true
#          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }}:latest

  cd:
    name: Connect server ssh and pull from container registry
    needs: ci
    runs-on: ubuntu-latest
      
    steps:
#      - name: Login to NCP Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ secrets.NCP_CONTAINER_REGISTRY }}
#          username: ${{ secrets.NCP_ACCESS_KEY }}
#          password: ${{ secrets.NCP_SECRET_KEY }}

      - name: Docker Container Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_PORT }}
          script: |
            cd /${{ secrets.DEPLOYMENT_USERNAME }}/app/${{ secrets.DOCKER_HUB_REPOSITORY }}
            git pull origin main
            ./gradlew clean build -x test
            docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPOSITORY }} --platform linux/amd64 .
            docker-compose -f docker-compose.yml up -d
            docker image prune -f